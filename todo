// DONE - relative path for component template url
// TODO minification
// TODO source maps for typescript files (debugging in chrome dev tools)
// TODO scss from components (how does this mesh with the css folder)
// DONE dev - auto refreshes browser
// DONE - api on the server
// DONE Model shared between client and server
// TODO upgrade to Typescript 2.4 when RXJS fixes the observable bug (https://stackoverflow.com/questions/44793859/rxjs-subject-d-ts-error-class-subjectt-incorrectly-extends-base-class-obs)
// TODO https://inkscape.org/en/ (for SVG vector graphics)
// 50% - included mocha and chai for testing.
// 90% - Api routes as typed typescript files that are importable.
//      -- IGNORED Need get/post/delete etc
//         All calls can be done through POST.
//      -- DONE Need to rework how the API's are actioned. We need parameter types to parse
//         in the generateProxy and return values.
//      -- DONE simple types and complex types for parameters (we wrap the proxy values and unwrap on server side to support simple parameters)
//      -- DONE interface locations?
//      -- DONE proxy decorator names
//      -- DONE CLEAN UP generateProxy.
//      -- DONE Need to allow for Complex type array. Right now it devolves into any. Also supports simple array as part of the proxy type. eg) number[] or Example[]
//      -- TODO Allow for extending another proxyType? OR should we move proxyType generation from @table()?
//      -- TODO write examples for how to use ProxyType (optional parameters, arrays etc).
// 85% - Database layer
//      -- DONE Transaction commit, rollback should not be able to be called by anyone other than Database class.
//      -- DONE Query Single throws an error if more than one record is returned.
//      -- DONE Review how connection pool works for PG (https://github.com/brianc/node-postgres/wiki/Transactions)
//      -- TODO Query and Query Single don't guarantee you get an object of type T back.